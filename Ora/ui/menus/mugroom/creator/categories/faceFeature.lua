---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Dylan Malandain.
--- DateTime: 02/09/2019 15:01
---

local Items = {
    mp_f_freemode_01 = {
        [1] = {
            List = {"Standard", "Protubérant", "Plat", "-"},
            Index = 4
        },
        [2] = {
            List = {"Standard", "Ouverts", "Plissés", "-"},
            Index = 4
        },
        [3] = {
            List = {"Standard", "Large", "Petit", "-"},
            Index = 4
        },
        [4] = {
            List = {"Standard", "Saillante", "Incurvée", "-"},
            Index = 4
        },
        [5] = {
            List = {"Standard", "Cassé", "Vers le haut", "-"},
            Index = 4
        },
        [6] = {
            List = {"Standard", "Larges", "Fines", "-"},
            Index = 4
        },
        [7] = {
            List = {"Standard", "Minces", "Épaisses", "-"},
            Index = 4
        },
        [8] = {
            List = {"Standard", "Minces", "Épaisses", "-"},
            Index = 4
        },
        [9] = {
            List = {"Standard", "Carrée", "Ronde", "-"},
            Index = 4
        },
        [10] = {
            List = {"Standard", "Large", "Petit", "-"},
            Index = 4
        },
        [11] = {
            List = {"Standard", "Pointu", "Rond", "-"},
            Index = 4
        }
    },
    mp_m_freemode_01 = {
        [1] = {
            List = {"Standard", "Protubérant", "Plat", "-"},
            Index = 4
        },
        [2] = {
            List = {"Standard", "Ouverts", "Plissés", "-"},
            Index = 4
        },
        [3] = {
            List = {"Standard", "Large", "Petit", "-"},
            Index = 4
        },
        [4] = {
            List = {"Standard", "Saillante", "Incurvée", "-"},
            Index = 4
        },
        [5] = {
            List = {"Standard", "Cassé", "Vers le haut", "-"},
            Index = 4
        },
        [6] = {
            List = {"Standard", "Larges", "Fines", "-"},
            Index = 4
        },
        [7] = {
            List = {"Standard", "Minces", "Épaisses", "-"},
            Index = 4
        },
        [8] = {
            List = {"Standard", "Minces", "Épaisses", "-"},
            Index = 4
        },
        [9] = {
            List = {"Standard", "Carrée", "Ronde", "-"},
            Index = 4
        },
        [10] = {
            List = {"Standard", "Large", "Petit", "-"},
            Index = 4
        },
        [11] = {
            List = {"Standard", "Pointu", "Rond", "-"},
            Index = 4
        }
    }
}
local self = {
    FACE_F_BROW = false,
    FACE_F_EYES = false,
    FACE_F_NOSE = false,
    FACE_F_NOSEP = false,
    FACE_F_NOSET = false,
    FACE_F_CHEEK = false,
    FACE_F_CHEEKS = false,
    FACE_F_LIPS = false,
    FACE_F_JAW = false,
    FACE_F_CHIN = false,
    FACE_F_CHINS = false
}
function CreatorMenuFaceFeatures(indexCharacter, indexCharacter)
    RageUI.DrawContent(
        {header = true, instructionalButton = true},
        function()
            RageUI.List(
                GetLabelText("FACE_F_BROW"),
                Items[indexCharacter.Model][1].List,
                Items[indexCharacter.Model][1].Index,
                GetLabelText("FACE_FEAT_H"),
                {},
                true,
                function(Hovered, Active, Selected, Index)
                    Items[indexCharacter.Model][1].Index = Index
                    if (Active) then
                        if (Index == 1) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.eyebrow.height = 0.5
                            indexCharacter[indexCharacter.Model].Face.facial.features.eyebrow.forward = 0.5
                        elseif (Index == 2) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.eyebrow.height = 0.9
                            indexCharacter[indexCharacter.Model].Face.facial.features.eyebrow.forward = 0.6
                        elseif (Index == 3) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.eyebrow.height = 0.30
                            indexCharacter[indexCharacter.Model].Face.facial.features.eyebrow.forward = 0.70
                        end
                        self.FACE_F_BROW = true
                        self.FACE_F_CHINS = false
                    else
                        self.FACE_F_BROW = false
                    end
                end
            )
            RageUI.List(
                GetLabelText("FACE_F_EYES"),
                Items[indexCharacter.Model][2].List,
                Items[indexCharacter.Model][2].Index,
                GetLabelText("FACE_FEAT_H"),
                {},
                true,
                function(Hovered, Active, Selected, Index)
                    Items[indexCharacter.Model][2].Index = Index
                    if (Active) then
                        if (Index == 1) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.eye.opening = 0.5
                        elseif (Index == 2) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.eye.opening = 0.9
                        elseif (Index == 3) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.eye.opening = 0.30
                        end
                        self.FACE_F_EYES = true
                    else
                        self.FACE_F_EYES = false
                    end
                end
            )
            RageUI.List(
                GetLabelText("FACE_F_NOSE"),
                Items[indexCharacter.Model][3].List,
                Items[indexCharacter.Model][3].Index,
                GetLabelText("FACE_FEAT_H"),
                {},
                true,
                function(Hovered, Active, Selected, Index)
                    Items[indexCharacter.Model][3].Index = Index
                    if (Active) then
                        if (Index == 1) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.nose.width = 0.5
                            indexCharacter[indexCharacter.Model].Face.facial.features.nose.peak.lowering = 0.5
                        elseif (Index == 2) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.nose.width = 0.9
                            indexCharacter[indexCharacter.Model].Face.facial.features.nose.peak.lowering = 0.6
                        elseif (Index == 3) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.nose.width = 0.30
                            indexCharacter[indexCharacter.Model].Face.facial.features.nose.peak.lowering = 0.70
                        end
                        self.FACE_F_NOSE = true
                    else
                        self.FACE_F_NOSE = false
                    end
                end
            )
            RageUI.List(
                GetLabelText("FACE_F_NOSEP"),
                Items[indexCharacter.Model][4].List,
                Items[indexCharacter.Model][4].Index,
                GetLabelText("FACE_FEAT_H"),
                {},
                true,
                function(Hovered, Active, Selected, Index)
                    Items[indexCharacter.Model][4].Index = Index
                    if (Active) then
                        if (Index == 1) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.nose.bone.height = 0.5
                            indexCharacter[indexCharacter.Model].Face.facial.features.nose.bone.twist = 0.5
                        elseif (Index == 2) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.nose.bone.height = 0.9
                            indexCharacter[indexCharacter.Model].Face.facial.features.nose.bone.twist = 0.6
                        elseif (Index == 3) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.nose.bone.height = 0.30
                            indexCharacter[indexCharacter.Model].Face.facial.features.nose.bone.twist = 0.70
                        end
                        self.FACE_F_NOSEP = true
                    else
                        self.FACE_F_NOSEP = false
                    end
                end
            )
            RageUI.List(
                GetLabelText("FACE_F_NOSET"),
                Items[indexCharacter.Model][5].List,
                Items[indexCharacter.Model][5].Index,
                GetLabelText("FACE_FEAT_H"),
                {},
                true,
                function(Hovered, Active, Selected, Index)
                    Items[indexCharacter.Model][5].Index = Index
                    if (Active) then
                        if (Index == 1) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.nose.peak.height = 0.5
                            indexCharacter[indexCharacter.Model].Face.facial.features.nose.peak.length = 0.5
                        elseif (Index == 2) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.nose.peak.height = 0.9
                            indexCharacter[indexCharacter.Model].Face.facial.features.nose.peak.length = 0.6
                        elseif (Index == 3) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.nose.peak.height = 0.30
                            indexCharacter[indexCharacter.Model].Face.facial.features.nose.peak.length = 0.70
                        end
                        self.FACE_F_NOSET = true
                    else
                        self.FACE_F_NOSET = false
                    end
                end
            )
            RageUI.List(
                GetLabelText("FACE_F_CHEEK"),
                Items[indexCharacter.Model][6].List,
                Items[indexCharacter.Model][6].Index,
                GetLabelText("FACE_FEAT_H"),
                {},
                true,
                function(Hovered, Active, Selected, Index)
                    Items[indexCharacter.Model][6].Index = Index
                    if (Active) then
                        if (Index == 1) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.cheeks.bone.height = 0.5
                            indexCharacter[indexCharacter.Model].Face.facial.features.cheeks.bone.width = 0.5
                        elseif (Index == 2) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.cheeks.bone.height = 0.9
                            indexCharacter[indexCharacter.Model].Face.facial.features.cheeks.bone.width = 0.6
                        elseif (Index == 3) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.cheeks.bone.height = 0.30
                            indexCharacter[indexCharacter.Model].Face.facial.features.cheeks.bone.width = 0.70
                        end
                        self.FACE_F_CHEEK = true
                    else
                        self.FACE_F_CHEEK = false
                    end
                end
            )
            RageUI.List(
                GetLabelText("FACE_F_CHEEKS"),
                Items[indexCharacter.Model][7].List,
                Items[indexCharacter.Model][7].Index,
                GetLabelText("FACE_FEAT_H"),
                {},
                true,
                function(Hovered, Active, Selected, Index)
                    Items[indexCharacter.Model][7].Index = Index
                    if (Active) then
                        if (Index == 1) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.cheeks.bone.width = 0.5
                        elseif (Index == 2) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.cheeks.bone.width = 0.9
                        elseif (Index == 3) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.cheeks.bone.width = 0.30
                        end
                        self.FACE_F_CHEEKS = true
                    else
                        self.FACE_F_CHEEKS = false
                    end
                end
            )
            RageUI.List(
                GetLabelText("FACE_F_LIPS"),
                Items[indexCharacter.Model][8].List,
                Items[indexCharacter.Model][8].Index,
                GetLabelText("FACE_FEAT_H"),
                {},
                true,
                function(Hovered, Active, Selected, Index)
                    Items[indexCharacter.Model][8].Index = Index
                    if (Active) then
                        if (Index == 1) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.lips.thickness = 0.5
                        elseif (Index == 2) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.lips.thickness = 0.9
                        elseif (Index == 3) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.lips.thickness = 0.30
                        end
                        self.FACE_F_LIPS = true
                    else
                        self.FACE_F_LIPS = false
                    end
                end
            )
            RageUI.List(
                GetLabelText("FACE_F_JAW"),
                Items[indexCharacter.Model][9].List,
                Items[indexCharacter.Model][9].Index,
                GetLabelText("FACE_FEAT_H"),
                {},
                true,
                function(Hovered, Active, Selected, Index)
                    Items[indexCharacter.Model][9].Index = Index
                    if (Active) then
                        if (Index == 1) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.jaw.bone.width = 0.5
                            indexCharacter[indexCharacter.Model].Face.facial.features.jaw.bone.backLength = 0.5
                        elseif (Index == 2) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.jaw.bone.width = 0.9
                            indexCharacter[indexCharacter.Model].Face.facial.features.jaw.bone.backLength = 0.6
                        elseif (Index == 3) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.jaw.bone.width = 0.30
                            indexCharacter[indexCharacter.Model].Face.facial.features.jaw.bone.backLength = 0.70
                        end
                        self.FACE_F_JAW = true
                    else
                        self.FACE_F_JAW = false
                    end
                end
            )
            RageUI.List(
                GetLabelText("FACE_F_CHIN"),
                Items[indexCharacter.Model][10].List,
                Items[indexCharacter.Model][10].Index,
                GetLabelText("FACE_FEAT_H"),
                {},
                true,
                function(Hovered, Active, Selected, Index)
                    Items[indexCharacter.Model][10].Index = Index
                    if (Active) then
                        if (Index == 1) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.chimp.bone.length = 0.5
                            indexCharacter[indexCharacter.Model].Face.facial.features.chimp.bone.width = 0.5
                        elseif (Index == 2) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.chimp.bone.length = 0.9
                            indexCharacter[indexCharacter.Model].Face.facial.features.chimp.bone.width = 0.6
                        elseif (Index == 3) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.chimp.bone.length = 0.30
                            indexCharacter[indexCharacter.Model].Face.facial.features.chimp.bone.width = 0.70
                        end
                        self.FACE_F_CHIN = true
                    else
                        self.FACE_F_CHIN = false
                    end
                end
            )
            RageUI.List(
                GetLabelText("FACE_F_CHINS"),
                Items[indexCharacter.Model][11].List,
                Items[indexCharacter.Model][11].Index,
                GetLabelText("FACE_FEAT_H"),
                {},
                true,
                function(Hovered, Active, Selected, Index)
                    Items[indexCharacter.Model][11].Index = Index
                    if (Active) then
                        if (Index == 1) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.chimp.hole = 0.5
                            indexCharacter[indexCharacter.Model].Face.facial.features.chimp.bone.lowering = 0.5
                        elseif (Index == 2) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.chimp.hole = 0.9
                            indexCharacter[indexCharacter.Model].Face.facial.features.chimp.bone.lowering = 0.6
                        elseif (Index == 3) then
                            indexCharacter[indexCharacter.Model].Face.facial.features.chimp.hole = 0.30
                            indexCharacter[indexCharacter.Model].Face.facial.features.chimp.bone.lowering = 0.70
                        end
                        self.FACE_F_CHINS = true
                        self.FACE_F_BROW = false
                    else
                        self.FACE_F_CHINS = false
                    end
                end
            )
        end,
        function()
            ---Panels
            if (self.FACE_F_BROW) then
                RageUI.GridPanel(
                    indexCharacter[indexCharacter.Model].Face.facial.features.eyebrow.forward,
                    indexCharacter[indexCharacter.Model].Face.facial.features.eyebrow.height,
                    "Haut",
                    "Bas",
                    "Intérieur",
                    "Extérieur",
                    function(Hovered, Active, X, Y)
                        indexCharacter[indexCharacter.Model].Face.facial.features.eyebrow.height = Y
                        indexCharacter[indexCharacter.Model].Face.facial.features.eyebrow.forward = X
                        UpdateEntityFace(PlayerPedId(), indexCharacter[indexCharacter.Model].Face)
                        indexCharacter[indexCharacter.Model].Face.facial.features.eyebrow.height = Y
                        indexCharacter[indexCharacter.Model].Face.facial.features.eyebrow.forward = X
                    end
                )
            end
            if (self.FACE_F_EYES) then
                RageUI.GridPanelHorizontal(
                    indexCharacter[indexCharacter.Model].Face.facial.features.eye.opening,
                    "Ouverts",
                    "Plissés",
                    function(Hovered, Active, X)
                        indexCharacter[indexCharacter.Model].Face.facial.features.eye.opening = X
                        UpdateEntityFace(PlayerPedId(), indexCharacter[indexCharacter.Model].Face)
                        indexCharacter[indexCharacter.Model].Face.facial.features.eye.opening = X
                    end
                )
            end
            if (self.FACE_F_NOSE) then
                --- Nez
                RageUI.GridPanel(
                    indexCharacter[indexCharacter.Model].Face.facial.features.nose.width,
                    indexCharacter[indexCharacter.Model].Face.facial.features.nose.peak.lowering,
                    "Relevé",
                    "Bas",
                    "Fin",
                    "Épais",
                    function(Hovered, Active, X, Y)
                        indexCharacter[indexCharacter.Model].Face.facial.features.nose.width = X
                        indexCharacter[indexCharacter.Model].Face.facial.features.nose.peak.lowering = Y
                        UpdateEntityFace(PlayerPedId(), indexCharacter[indexCharacter.Model].Face)
                        indexCharacter[indexCharacter.Model].Face.facial.features.nose.width = X
                        indexCharacter[indexCharacter.Model].Face.facial.features.nose.peak.lowering = Y
                    end
                )
            end
            if (self.FACE_F_NOSEP) then
                --- Arête
                RageUI.GridPanel(
                    indexCharacter[indexCharacter.Model].Face.facial.features.nose.bone.height,
                    indexCharacter[indexCharacter.Model].Face.facial.features.nose.bone.twist,
                    "Saillante",
                    "Incurvée",
                    "Courte",
                    "Longue",
                    function(Hovered, Active, X, Y)
                        indexCharacter[indexCharacter.Model].Face.facial.features.nose.bone.height = X
                        indexCharacter[indexCharacter.Model].Face.facial.features.nose.bone.twist = Y
                        UpdateEntityFace(PlayerPedId(), indexCharacter[indexCharacter.Model].Face)
                        indexCharacter[indexCharacter.Model].Face.facial.features.nose.bone.height = X
                        indexCharacter[indexCharacter.Model].Face.facial.features.nose.bone.twist = Y
                    end
                )
            end
            if (self.FACE_F_NOSET) then
                --- Peak
                RageUI.GridPanel(
                    indexCharacter[indexCharacter.Model].Face.facial.features.nose.peak.height,
                    indexCharacter[indexCharacter.Model].Face.facial.features.nose.peak.length,
                    "Bout vers le haut",
                    "Bout vers me nas",
                    "Cassé gauche",
                    "Cassé droite",
                    function(Hovered, Active, X, Y)
                        indexCharacter[indexCharacter.Model].Face.facial.features.nose.peak.height = X
                        indexCharacter[indexCharacter.Model].Face.facial.features.nose.peak.length = Y
                        UpdateEntityFace(PlayerPedId(), indexCharacter[indexCharacter.Model].Face)
                        indexCharacter[indexCharacter.Model].Face.facial.features.nose.peak.height = X
                        indexCharacter[indexCharacter.Model].Face.facial.features.nose.peak.length = Y
                    end
                )
            end
            if (self.FACE_F_CHEEK) then
                RageUI.GridPanel(
                    indexCharacter[indexCharacter.Model].Face.facial.features.cheeks.bone.height,
                    indexCharacter[indexCharacter.Model].Face.facial.features.cheeks.bone.width,
                    "Haut",
                    "Bas",
                    "Intérieur",
                    "Extérieur",
                    function(Hovered, Active, X, Y)
                        indexCharacter[indexCharacter.Model].Face.facial.features.cheeks.bone.height = X
                        indexCharacter[indexCharacter.Model].Face.facial.features.cheeks.bone.width = Y
                        UpdateEntityFace(PlayerPedId(), indexCharacter[indexCharacter.Model].Face)
                        indexCharacter[indexCharacter.Model].Face.facial.features.cheeks.bone.height = X
                        indexCharacter[indexCharacter.Model].Face.facial.features.cheeks.bone.width = Y
                    end
                )
            end
            if (self.FACE_F_CHEEKS) then
                RageUI.GridPanelHorizontal(
                    indexCharacter[indexCharacter.Model].Face.facial.features.cheeks.bone.width,
                    "Émacié",
                    "Bouffi",
                    function(Hovered, Active, X)
                        indexCharacter[indexCharacter.Model].Face.facial.features.cheeks.bone.width = X
                        UpdateEntityFace(PlayerPedId(), indexCharacter[indexCharacter.Model].Face)
                        indexCharacter[indexCharacter.Model].Face.facial.features.cheeks.bone.width = X
                    end
                )
            end
            if (self.FACE_F_LIPS) then
                RageUI.GridPanelHorizontal(
                    indexCharacter[indexCharacter.Model].Face.facial.features.lips.thickness,
                    "Minces",
                    "Épaisses",
                    function(Hovered, Active, X)
                        indexCharacter[indexCharacter.Model].Face.facial.features.lips.thickness = X
                        UpdateEntityFace(PlayerPedId(), indexCharacter[indexCharacter.Model].Face)
                        indexCharacter[indexCharacter.Model].Face.facial.features.lips.thickness = X
                    end
                )
            end
            if (self.FACE_F_JAW) then
                RageUI.GridPanel(
                    indexCharacter[indexCharacter.Model].Face.facial.features.jaw.bone.width,
                    indexCharacter[indexCharacter.Model].Face.facial.features.jaw.bone.backLength,
                    "Ronde",
                    "Carrée",
                    "Étroite",
                    "Large",
                    function(Hovered, Active, X, Y)
                        indexCharacter[indexCharacter.Model].Face.facial.features.jaw.bone.width = X
                        indexCharacter[indexCharacter.Model].Face.facial.features.jaw.bone.backLength = Y
                        UpdateEntityFace(PlayerPedId(), indexCharacter[indexCharacter.Model].Face)
                        indexCharacter[indexCharacter.Model].Face.facial.features.jaw.bone.width = X
                        indexCharacter[indexCharacter.Model].Face.facial.features.jaw.bone.backLength = Y
                    end
                )
            end
            if (self.FACE_F_CHIN) then
                RageUI.GridPanel(
                    indexCharacter[indexCharacter.Model].Face.facial.features.chimp.bone.length,
                    indexCharacter[indexCharacter.Model].Face.facial.features.chimp.bone.width,
                    "Haut",
                    "Bas",
                    "Intérieur",
                    "Extérieur",
                    function(Hovered, Active, X, Y)
                        indexCharacter[indexCharacter.Model].Face.facial.features.chimp.bone.length = X
                        indexCharacter[indexCharacter.Model].Face.facial.features.chimp.bone.width = Y
                        UpdateEntityFace(PlayerPedId(), indexCharacter[indexCharacter.Model].Face)
                        indexCharacter[indexCharacter.Model].Face.facial.features.chimp.bone.length = X
                        indexCharacter[indexCharacter.Model].Face.facial.features.chimp.bone.width = Y
                    end
                )
            end
            if (self.FACE_F_CHINS) then
                RageUI.GridPanel(
                    indexCharacter[indexCharacter.Model].Face.facial.features.chimp.hole,
                    indexCharacter[indexCharacter.Model].Face.facial.features.chimp.bone.lowering,
                    "Arrondi",
                    "Fossette",
                    "Carré",
                    "Pointu",
                    function(Hovered, Active, X, Y)
                        indexCharacter[indexCharacter.Model].Face.facial.features.chimp.hole = X
                        indexCharacter[indexCharacter.Model].Face.facial.features.chimp.bone.lowering = Y
                        UpdateEntityFace(PlayerPedId(), indexCharacter[indexCharacter.Model].Face)
                        indexCharacter[indexCharacter.Model].Face.facial.features.chimp.hole = X
                        indexCharacter[indexCharacter.Model].Face.facial.features.chimp.bone.lowering = Y
                    end
                )
            end
        end
    )
end
