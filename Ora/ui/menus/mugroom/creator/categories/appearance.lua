---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Dylan Malandain.
--- DateTime: 02/09/2019 15:02
---
local SA = {
    GetLabelText("CC_EYEBRW_0"),
    GetLabelText("CC_EYEBRW_1"),
    GetLabelText("CC_EYEBRW_2"),
    GetLabelText("CC_EYEBRW_3"),
    GetLabelText("CC_EYEBRW_4"),
    GetLabelText("CC_EYEBRW_5"),
    GetLabelText("CC_EYEBRW_6"),
    GetLabelText("CC_EYEBRW_7"),
    GetLabelText("CC_EYEBRW_8"),
    GetLabelText("CC_EYEBRW_9"),
    GetLabelText("CC_EYEBRW_10"),
    GetLabelText("CC_EYEBRW_11"),
    GetLabelText("CC_EYEBRW_12"),
    GetLabelText("CC_EYEBRW_13"),
    GetLabelText("CC_EYEBRW_14"),
    GetLabelText("CC_EYEBRW_15"),
    GetLabelText("CC_EYEBRW_16"),
    GetLabelText("CC_EYEBRW_17"),
    GetLabelText("CC_EYEBRW_18"),
    GetLabelText("CC_EYEBRW_19"),
    GetLabelText("CC_EYEBRW_20"),
    GetLabelText("CC_EYEBRW_21"),
    GetLabelText("CC_EYEBRW_22"),
    GetLabelText("CC_EYEBRW_23"),
    GetLabelText("CC_EYEBRW_24"),
    GetLabelText("CC_EYEBRW_25"),
    GetLabelText("CC_EYEBRW_26"),
    GetLabelText("CC_EYEBRW_27"),
    GetLabelText("CC_EYEBRW_28"),
    GetLabelText("CC_EYEBRW_29"),
    GetLabelText("CC_EYEBRW_30"),
    GetLabelText("CC_EYEBRW_31"),
    GetLabelText("CC_EYEBRW_32"),
    GetLabelText("CC_EYEBRW_33")
}

local rideList = {
    "-",
    "Rides yeux",
    "Rides 1",
    "Rides 2",
    "Rides 3",
    "Rides 4",
    "Rides 5",
    "Rides 6",
    "Rides 7",
    "Rides 8",
    "Rides 9",
    "Rides 10",
    "Rides EX 1",
    "Rides EX 2",
    "Cernes"
}
local tachList = {
    "-",
    "Peu de tâches",
    "Tâches peu visibles",
    "Tâches baladées",
    "Tâches éparpillées",
    "Tâches sauvages",
    "Tâches centrées",
    "Tâches joues",
    "Tâches visage",
    "Infection visage",
    "Infection joues",
    "Rougeur",
    "Rougeur infectée",
    "Rougeurs front",
    "Acnée",
    "Acnée sévère",
    "Acnée baladée",
    "Acnée épaisse",
    "Acnée front",
    "Acnée totale"
}
local eyesList = {
    "Vert",
    "Emmeraude",
    "Bleu",
    "Bleu ciel",
    "Marron clair",
    "Marron",
    "Noisette",
    "Gris sombre",
    "Gris propre",
    "Rose",
    "Jaune",
    "Violet",
    "Blackout",
    "Ombre grise",
    "Soleil tequila",
    "Atomic",
    "Faux",
    "Cola",
    "Ranger",
    "Ying-yang",
    "Bull",
    "Lezard",
    "Dragon",
    "Extra-terrestre",
    "Chèvre",
    "Smiley",
    "Possédé",
    "Démon",
    "Infecté",
    "Alien",
    "Mort",
    "Zombie"
}

local BarbeName = {}
for i = 1, 29, 1 do
    BarbeName[i] = GetLabelText("CC_BEARD_" .. i - 1)
end

local SKClist = {"-"}
for i = 0, 11, 1 do
    table.insert(SKClist, GetLabelText("CC_SKINCOM_" .. i))
end

local MoleList = {"-"}

for i = 0, 18, 1 do
    table.insert(MoleList, GetLabelText("CC_MOLEFRECK_" .. i))
end

local ComplexList = {"-"}
for i = 1, 11, 1 do
    table.insert(ComplexList, GetLabelText("CC_MOLEFRECK_" .. i))
end

local MaquillageList = {"-"}
for i = 1, 71, 1 do
    table.insert(MaquillageList, GetLabelText("CC_MKUP_" .. i))
end

local LipsList = {"-"}
for i = 1, 10, 1 do
    table.insert(LipsList, GetLabelText("CC_LIPSTICK_" .. i))
end

local colorsPanel = {
    haircut = {
        [1] = 1,
        [2] = 1
    },
    barber = {
        [1] = 1,
        [2] = 1
    },
    lipstick = {
        [1] = 1,
        [2] = 1
    },
    makeup = {
        [1] = 1,
        [2] = 1
    }
}

local parameters = {
    FACE_HAIR = false,
    FACE_BEARD = false,
    FACE_SKINISSUES = false,
    FACE_OLDNESS = false,
    FACE_TINT = false
}

-- TODO Implemented poile au dos ect..
function CreatorMenuAppearance(indexCharacter, createPlayer)
    hairstyles = {}
    if Ora.World.Ped:IsPedMale(PlayerPedId()) then
        for i = 1, 25, 1 do
            hairstyles[i] =
                GetLabelText("CC_M_HS_" .. i - 1) == "NULL" and "Coupe #" .. i or GetLabelText("CC_M_HS_" .. i - 1)
        end
    else
        for i = 1, 25, 1 do
            hairstyles[i] =
                GetLabelText("CC_F_HS_" .. i - 1) == "NULL" and "Coupe #" .. i or GetLabelText("CC_F_HS_" .. i - 1)
        end
    end
    RageUI.DrawContent(
        {header = true, instructionalButton = true},
        function()
            RageUI.List(
                GetLabelText("FACE_HAIR"),
                hairstyles,
                indexCharacter[createPlayer.Model].Face.hair.style + 1,
                GetLabelText("FACE_APP_H"),
                {},
                true,
                function(Hovered, Active, Selected, Index)
                    if Active then
                        if createPlayer[createPlayer.Model].Face.hair.style ~= Index - 1 then
                            createPlayer[createPlayer.Model].Face.hair.style = Index - 1
                            UpdateEntityFace(PlayerPedId(), createPlayer[createPlayer.Model].Face)
                            indexCharacter[createPlayer.Model].Face.hair.style = Index - 1
                        end
                        parameters.FACE_HAIR = true
                    else
                        parameters.FACE_HAIR = false
                    end
                end
            )

            RageUI.List(
                "Sourcils",
                SA,
                indexCharacter[createPlayer.Model].Face.facial.hair.eyebrow.style + 1,
                GetLabelText("FACE_APP_H"),
                {},
                true,
                function(Hovered, Active, Selected, Index)
                    if Active then
                        if createPlayer[createPlayer.Model].Face.facial.hair.eyebrow.style ~= Index - 1 then
                            createPlayer[createPlayer.Model].Face.facial.hair.eyebrow.style = Index - 1
                            UpdateEntityFace(PlayerPedId(), createPlayer[createPlayer.Model].Face)
                            indexCharacter[createPlayer.Model].Face.facial.hair.eyebrow.style = Index - 1
                        end
                        parameters.FACE_EYEBROW = true
                    else
                        parameters.FACE_EYEBROW = false
                    end
                end
            )
            if (GetEntityModel(PlayerPedId()) == GetHashKey("mp_m_freemode_01")) then
                RageUI.List(
                    "Barbe",
                    BarbeName,
                    indexCharacter[createPlayer.Model].Face.facial.hair.beard.style + 1,
                    GetLabelText("FACE_APP_H"),
                    {},
                    true,
                    function(Hovered, Active, Selected, Index)
                        if Active then
                            if createPlayer[createPlayer.Model].Face.facial.hair.beard.style ~= Index - 1 then
                                createPlayer[createPlayer.Model].Face.facial.hair.beard.style = Index - 1
                                UpdateEntityFace(PlayerPedId(), createPlayer[createPlayer.Model].Face)
                                indexCharacter[createPlayer.Model].Face.facial.hair.beard.style = Index - 1
                            end
                            parameters.FACE_BEARD = true
                        else
                            parameters.FACE_BEARD = false
                        end
                    end
                )
            else
                parameters.FACE_BEARD = false
            end
            RageUI.List(
                GetLabelText("FACE_F_SKINB"),
                tachList,
                indexCharacter[createPlayer.Model].Face.blemishes.style + 1,
                GetLabelText("FACE_APP_H"),
                {},
                true,
                function(Hovered, Active, Selected, Index)
                    if Active then
                        if createPlayer[createPlayer.Model].Face.blemishes.style ~= Index - 1 then
                            createPlayer[createPlayer.Model].Face.blemishes.style = Index - 1
                            UpdateEntityFace(PlayerPedId(), createPlayer[createPlayer.Model].Face)
                            indexCharacter[createPlayer.Model].Face.blemishes.style = Index - 1
                        end
                        parameters.FACE_TACH = true
                    else
                        parameters.FACE_TACH = false
                    end
                end
            )
            RageUI.List(
                GetLabelText("FACE_F_SKINA"),
                rideList,
                indexCharacter[createPlayer.Model].Face.ageing.style + 1,
                GetLabelText("FACE_APP_H"),
                {},
                true,
                function(Hovered, Active, Selected, Index)
                    if Active then
                        if createPlayer[createPlayer.Model].Face.ageing.style ~= Index - 1 then
                            createPlayer[createPlayer.Model].Face.ageing.style = Index - 1
                            UpdateEntityFace(PlayerPedId(), createPlayer[createPlayer.Model].Face)
                            indexCharacter[createPlayer.Model].Face.ageing.style = Index - 1
                        end
                        parameters.FACE_AGE = true
                    else
                        parameters.FACE_AGE = false
                    end
                end
            )
            RageUI.List(
                GetLabelText("FACE_F_SKC"),
                SKClist,
                indexCharacter[createPlayer.Model].Face.skinAspect.style + 1,
                GetLabelText("FACE_APP_H"),
                {},
                true,
                function(Hovered, Active, Selected, Index)
                    if Active then
                        if createPlayer[createPlayer.Model].Face.skinAspect.style ~= Index - 1 then
                            createPlayer[createPlayer.Model].Face.skinAspect.style = Index - 1
                            UpdateEntityFace(PlayerPedId(), createPlayer[createPlayer.Model].Face)
                            indexCharacter[createPlayer.Model].Face.skinAspect.style = Index - 1
                        end
                        parameters.skin_Aspect = true
                    else
                        parameters.skin_Aspect = false
                    end
                end
            )
            RageUI.List(
                GetLabelText("FACE_F_MOLE"),
                MoleList,
                indexCharacter[createPlayer.Model].Face.freckles.style + 1,
                GetLabelText("FACE_APP_H"),
                {},
                true,
                function(Hovered, Active, Selected, Index)
                    if Active then
                        if createPlayer[createPlayer.Model].Face.freckles.style ~= Index - 1 then
                            createPlayer[createPlayer.Model].Face.freckles.style = Index - 1
                            UpdateEntityFace(PlayerPedId(), createPlayer[createPlayer.Model].Face)
                            indexCharacter[createPlayer.Model].Face.freckles.style = Index - 1
                        end
                        parameters.freckles = true
                    else
                        parameters.freckles = false
                    end
                end
            )
            RageUI.List(
                GetLabelText("FACE_F_SUND"),
                ComplexList,
                indexCharacter[createPlayer.Model].Face.complexion.style + 1,
                GetLabelText("FACE_APP_H"),
                {},
                true,
                function(Hovered, Active, Selected, Index)
                    if Active then
                        if createPlayer[createPlayer.Model].Face.complexion.style ~= Index - 1 then
                            createPlayer[createPlayer.Model].Face.complexion.style = Index - 1
                            UpdateEntityFace(PlayerPedId(), createPlayer[createPlayer.Model].Face)
                            indexCharacter[createPlayer.Model].Face.complexion.style = Index - 1
                        end
                        parameters.complexion = true
                    else
                        parameters.complexion = false
                    end
                end
            )
            RageUI.List(
                GetLabelText("FACE_APP_EYE"),
                eyesList,
                indexCharacter[createPlayer.Model].Face.eye.style + 1,
                GetLabelText("FACE_APP_H"),
                {},
                true,
                function(Hovered, Active, Selected, Index)
                    if Active then
                        if createPlayer[createPlayer.Model].Face.eye.style ~= Index - 1 then
                            createPlayer[createPlayer.Model].Face.eye.style = Index - 1
                            UpdateEntityFace(PlayerPedId(), createPlayer[createPlayer.Model].Face)
                            indexCharacter[createPlayer.Model].Face.eye.style = Index - 1
                        end
                    end
                end
            )

            RageUI.List(
                GetLabelText("FACE_F_EYEM"),
                MaquillageList,
                indexCharacter[createPlayer.Model].Face.makeup.style + 1,
                GetLabelText("FACE_APP_H"),
                {},
                true,
                function(Hovered, Active, Selected, Index)
                    if Active then
                        if createPlayer[createPlayer.Model].Face.makeup.style ~= Index - 1 then
                            createPlayer[createPlayer.Model].Face.makeup.style = Index - 1
                            UpdateEntityFace(PlayerPedId(), createPlayer[createPlayer.Model].Face)
                            indexCharacter[createPlayer.Model].Face.makeup.style = Index - 1
                        end
                        parameters.makeup = true
                    else
                        parameters.makeup = false
                    end
                end
            )
            if (GetEntityModel(PlayerPedId()) ~= GetHashKey("mp_m_freemode_01")) then
                RageUI.List(
                    GetLabelText("FACE_F_LIPST"),
                    LipsList,
                    indexCharacter[createPlayer.Model].Face.lipstick.style + 1,
                    GetLabelText("FACE_APP_H"),
                    {},
                    true,
                    function(Hovered, Active, Selected, Index)
                        if Active then
                            if createPlayer[createPlayer.Model].Face.lipstick.style ~= Index - 1 then
                                createPlayer[createPlayer.Model].Face.lipstick.style = Index - 1
                                UpdateEntityFace(PlayerPedId(), createPlayer[createPlayer.Model].Face)
                                indexCharacter[createPlayer.Model].Face.lipstick.style = Index - 1
                            end
                            parameters.lipstick = true
                        else
                            parameters.lipstick = false
                        end
                    end
                )
            end
        end,
        function()
            --- Panel
            print(dump(parameters))
            if parameters.FACE_HAIR then
                RageUI.ColourPanel(
                    "Couleur principale",
                    RageUI.PanelColour.HairCut,
                    colorsPanel.haircut[1],
                    indexCharacter[createPlayer.Model].Face.hair.color[1],
                    function(Hovered, Active, MinimumIndex, CurrentIndex)
                        if (Active) then
                            if createPlayer[createPlayer.Model].Face.hair.color[1] ~= CurrentIndex then
                                indexCharacter[createPlayer.Model].Face.hair.color[1] = CurrentIndex
                                colorsPanel.haircut[1] = MinimumIndex
                                createPlayer[createPlayer.Model].Face.hair.color[1] = CurrentIndex
                                UpdateEntityFace(PlayerPedId(), createPlayer[createPlayer.Model].Face)
                            end
                        end
                    end
                )
                RageUI.ColourPanel(
                    "Couleur secondaire",
                    RageUI.PanelColour.HairCut,
                    colorsPanel.haircut[2],
                    indexCharacter[createPlayer.Model].Face.hair.color[2],
                    function(Hovered, Active, MinimumIndex, CurrentIndex)
                        if (Active) then
                            if createPlayer[createPlayer.Model].Face.hair.color[2] ~= CurrentIndex then
                                indexCharacter[createPlayer.Model].Face.hair.color[2] = CurrentIndex
                                colorsPanel.haircut[2] = MinimumIndex
                                createPlayer[createPlayer.Model].Face.hair.color[2] = CurrentIndex
                                UpdateEntityFace(PlayerPedId(), createPlayer[createPlayer.Model].Face)
                            end
                        end
                    end
                )
            end
            if parameters.FACE_EYEBROW then
                RageUI.PercentagePanel(
                    indexCharacter[createPlayer.Model].Face.facial.hair.eyebrow.opacity,
                    "Opacité",
                    nil,
                    nil,
                    function(Hovered, Active, Percent)
                        if (Active) then
                            if createPlayer[createPlayer.Model].Face.facial.hair.eyebrow.opacity ~= Percent then
                                createPlayer[createPlayer.Model].Face.facial.hair.eyebrow.opacity = Percent
                                UpdateEntityFace(PlayerPedId(), createPlayer[createPlayer.Model].Face)
                                indexCharacter[createPlayer.Model].Face.facial.hair.eyebrow.opacity = Percent
                            end
                        end
                    end
                )
                RageUI.ColourPanel(
                    "Couleur principale",
                    RageUI.PanelColour.HairCut,
                    colorsPanel.barber[1],
                    indexCharacter[createPlayer.Model].Face.facial.hair.eyebrow.color[1],
                    function(Hovered, Active, MinimumIndex, CurrentIndex)
                        if (Active) then
                            if createPlayer[createPlayer.Model].Face.facial.hair.eyebrow.color[1] ~= CurrentIndex then
                                indexCharacter[createPlayer.Model].Face.facial.hair.eyebrow.color[1] = CurrentIndex
                                colorsPanel.barber[1] = MinimumIndex
                                createPlayer[createPlayer.Model].Face.facial.hair.eyebrow.color[1] = CurrentIndex
                                UpdateEntityFace(PlayerPedId(), createPlayer[createPlayer.Model].Face)
                            end
                        end
                    end
                )
                RageUI.ColourPanel(
                    "Couleur secondaire",
                    RageUI.PanelColour.HairCut,
                    colorsPanel.barber[2],
                    indexCharacter[createPlayer.Model].Face.facial.hair.eyebrow.color[2],
                    function(Hovered, Active, MinimumIndex, CurrentIndex)
                        if (Active) then
                            if createPlayer[createPlayer.Model].Face.facial.hair.eyebrow.color[2] ~= CurrentIndex then
                                indexCharacter[createPlayer.Model].Face.facial.hair.eyebrow.color[2] = CurrentIndex
                                colorsPanel.barber[2] = MinimumIndex
                                createPlayer[createPlayer.Model].Face.facial.hair.eyebrow.color[2] = CurrentIndex
                                UpdateEntityFace(PlayerPedId(), createPlayer[createPlayer.Model].Face)
                            end
                        end
                    end
                )
            end
            if parameters.lipstick then
                RageUI.PercentagePanel(
                    indexCharacter[createPlayer.Model].Face.lipstick.opacity,
                    "Opacité",
                    nil,
                    nil,
                    function(Hovered, Active, Percent)
                        if (Active) then
                            if createPlayer[createPlayer.Model].Face.lipstick.opacity ~= Percent then
                                createPlayer[createPlayer.Model].Face.lipstick.opacity = Percent
                                UpdateEntityFace(PlayerPedId(), createPlayer[createPlayer.Model].Face)
                                indexCharacter[createPlayer.Model].Face.lipstick.opacity = Percent
                            end
                        end
                    end
                )
                RageUI.ColourPanel(
                    "Couleur principale",
                    RageUI.PanelColour.HairCut,
                    colorsPanel.lipstick[1],
                    indexCharacter[createPlayer.Model].Face.lipstick.color[1],
                    function(Hovered, Active, MinimumIndex, CurrentIndex)
                        if (Active) then
                            if createPlayer[createPlayer.Model].Face.lipstick.color[1] ~= CurrentIndex then
                                indexCharacter[createPlayer.Model].Face.lipstick.color[1] = CurrentIndex
                                colorsPanel.lipstick[1] = MinimumIndex
                                UpdateEntityFace(PlayerPedId(), createPlayer[createPlayer.Model].Face)
                                createPlayer[createPlayer.Model].Face.lipstick.color[1] = CurrentIndex
                            end
                        end
                    end
                )
                RageUI.ColourPanel(
                    "Couleur secondaire",
                    RageUI.PanelColour.HairCut,
                    colorsPanel.lipstick[2],
                    indexCharacter[createPlayer.Model].Face.lipstick.color[2],
                    function(Hovered, Active, MinimumIndex, CurrentIndex)
                        if (Active) then
                            if createPlayer[createPlayer.Model].Face.lipstick.color[2] ~= CurrentIndex then
                                indexCharacter[createPlayer.Model].Face.lipstick.color[2] = CurrentIndex
                                colorsPanel.lipstick[2] = MinimumIndex
                                UpdateEntityFace(PlayerPedId(), createPlayer[createPlayer.Model].Face)
                                createPlayer[createPlayer.Model].Face.lipstick.color[2] = CurrentIndex
                            end
                        end
                    end
                )
            end
            if parameters.makeup then
                RageUI.PercentagePanel(
                    indexCharacter[createPlayer.Model].Face.makeup.opacity,
                    "Opacité",
                    nil,
                    nil,
                    function(Hovered, Active, Percent)
                        if createPlayer[createPlayer.Model].Face.makeup.opacity ~= Percent then
                            createPlayer[createPlayer.Model].Face.makeup.opacity = Percent
                            UpdateEntityFace(PlayerPedId(), createPlayer[createPlayer.Model].Face)
                            indexCharacter[createPlayer.Model].Face.makeup.opacity = Percent
                        end
                    end
                )
                RageUI.ColourPanel(
                    "Couleur principale",
                    RageUI.PanelColour.HairCut,
                    colorsPanel.makeup[1],
                    indexCharacter[createPlayer.Model].Face.makeup.color[1],
                    function(Hovered, Active, MinimumIndex, CurrentIndex)
                        if (Active) then
                            if createPlayer[createPlayer.Model].Face.makeup.color[1] ~= CurrentIndex then
                                indexCharacter[createPlayer.Model].Face.makeup.color[1] = CurrentIndex
                                colorsPanel.makeup[1] = MinimumIndex
                                UpdateEntityFace(PlayerPedId(), createPlayer[createPlayer.Model].Face)
                                createPlayer[createPlayer.Model].Face.makeup.color[1] = CurrentIndex
                            end
                        end
                    end
                )
                RageUI.ColourPanel(
                    "Couleur secondaire",
                    RageUI.PanelColour.HairCut,
                    colorsPanel.makeup[2],
                    indexCharacter[createPlayer.Model].Face.makeup.color[2],
                    function(Hovered, Active, MinimumIndex, CurrentIndex)
                        if (Active) then
                            if createPlayer[createPlayer.Model].Face.makeup.color[2] ~= CurrentIndex then
                                indexCharacter[createPlayer.Model].Face.makeup.color[2] = CurrentIndex
                                colorsPanel.makeup[2] = MinimumIndex
                                UpdateEntityFace(PlayerPedId(), createPlayer[createPlayer.Model].Face)
                                createPlayer[createPlayer.Model].Face.makeup.color[2] = CurrentIndex
                            end
                        end
                    end
                )
            end
            if parameters.FACE_BEARD then
                RageUI.PercentagePanel(
                    indexCharacter[createPlayer.Model].Face.facial.hair.beard.opacity,
                    "Opacité",
                    nil,
                    nil,
                    function(Hovered, Active, Percent)
                        if (Active) then
                            if createPlayer[createPlayer.Model].Face.facial.hair.beard.opacity ~= Percent then
                                createPlayer[createPlayer.Model].Face.facial.hair.beard.opacity = Percent
                                UpdateEntityFace(PlayerPedId(), createPlayer[createPlayer.Model].Face)
                                indexCharacter[createPlayer.Model].Face.facial.hair.beard.opacity = Percent
                            end
                        end
                    end
                )
                RageUI.ColourPanel(
                    "Couleur principale",
                    RageUI.PanelColour.HairCut,
                    colorsPanel.barber[1],
                    indexCharacter[createPlayer.Model].Face.facial.hair.beard.color[1],
                    function(Hovered, Active, MinimumIndex, CurrentIndex)
                        if (Active) then
                            if createPlayer[createPlayer.Model].Face.facial.hair.beard.color[1] ~= CurrentIndex then
                                indexCharacter[createPlayer.Model].Face.facial.hair.beard.color[1] = CurrentIndex
                                colorsPanel.barber[1] = MinimumIndex
                                UpdateEntityFace(PlayerPedId(), createPlayer[createPlayer.Model].Face)
                                createPlayer[createPlayer.Model].Face.facial.hair.beard.color[1] = CurrentIndex
                            end
                        end
                    end
                )
                RageUI.ColourPanel(
                    "Couleur secondaire",
                    RageUI.PanelColour.HairCut,
                    colorsPanel.barber[2],
                    indexCharacter[createPlayer.Model].Face.facial.hair.beard.color[2],
                    function(Hovered, Active, MinimumIndex, CurrentIndex)
                        if (Active) then
                            if createPlayer[createPlayer.Model].Face.facial.hair.beard.color[2] ~= CurrentIndex then
                                indexCharacter[createPlayer.Model].Face.facial.hair.beard.color[2] = CurrentIndex
                                colorsPanel.barber[2] = MinimumIndex
                                UpdateEntityFace(PlayerPedId(), createPlayer[createPlayer.Model].Face)
                                createPlayer[createPlayer.Model].Face.facial.hair.beard.color[2] = CurrentIndex
                            end
                        end
                    end
                )
            end
            if parameters.FACE_TACH then
                RageUI.PercentagePanel(
                    indexCharacter[createPlayer.Model].Face.blemishes.opacity,
                    "Opacité",
                    nil,
                    nil,
                    function(Hovered, Active, Percent)
                        if (Active) then
                            if createPlayer[createPlayer.Model].Face.blemishes.opacity ~= Percent then
                                createPlayer[createPlayer.Model].Face.blemishes.opacity = Percent
                                UpdateEntityFace(PlayerPedId(), createPlayer[createPlayer.Model].Face)
                                indexCharacter[createPlayer.Model].Face.blemishes.opacity = Percent
                            end
                        end
                    end
                )
            end
            if parameters.FACE_AGE then
                RageUI.PercentagePanel(
                    indexCharacter[createPlayer.Model].Face.ageing.opacity,
                    "Opacité",
                    nil,
                    nil,
                    function(Hovered, Active, Percent)
                        if (Active) then
                            if createPlayer[createPlayer.Model].Face.ageing.opacity ~= Percent then
                                createPlayer[createPlayer.Model].Face.ageing.opacity = Percent
                                UpdateEntityFace(PlayerPedId(), createPlayer[createPlayer.Model].Face)
                                indexCharacter[createPlayer.Model].Face.ageing.opacity = Percent
                            end
                        end
                    end
                )
            end
            if parameters.skin_Aspect then
                RageUI.PercentagePanel(
                    indexCharacter[createPlayer.Model].Face.skinAspect.opacity,
                    "Opacité",
                    nil,
                    nil,
                    function(Hovered, Active, Percent)
                        if (Active) then
                            if createPlayer[createPlayer.Model].Face.skinAspect.opacity ~= Percent then
                                createPlayer[createPlayer.Model].Face.skinAspect.opacity = Percent
                                UpdateEntityFace(PlayerPedId(), createPlayer[createPlayer.Model].Face)
                                indexCharacter[createPlayer.Model].Face.skinAspect.opacity = Percent
                            end
                        end
                    end
                )
            end
            if parameters.freckles then
                RageUI.PercentagePanel(
                    indexCharacter[createPlayer.Model].Face.freckles.opacity,
                    "Opacité",
                    nil,
                    nil,
                    function(Hovered, Active, Percent)
                        if (Active) then
                            if createPlayer[createPlayer.Model].Face.freckles.opacity ~= Percent then
                                createPlayer[createPlayer.Model].Face.freckles.opacity = Percent
                                UpdateEntityFace(PlayerPedId(), createPlayer[createPlayer.Model].Face)
                                indexCharacter[createPlayer.Model].Face.freckles.opacity = Percent
                            end
                        end
                    end
                )
            end
            if parameters.complexion then
                RageUI.PercentagePanel(
                    indexCharacter[createPlayer.Model].Face.complexion.opacity,
                    "Opacité",
                    nil,
                    nil,
                    function(Hovered, Active, Percent)
                        if (Active) then
                            if createPlayer[createPlayer.Model].Face.complexion.opacity ~= Percent then
                                createPlayer[createPlayer.Model].Face.complexion.opacity = Percent
                                UpdateEntityFace(PlayerPedId(), createPlayer[createPlayer.Model].Face)
                                indexCharacter[createPlayer.Model].Face.complexion.opacity = Percent
                            end
                        end
                    end
                )
            end
        end
    )
end
